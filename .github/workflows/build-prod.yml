on:
  push:
    branches:
      - main

name: Build Prod

env:
  APP_DIR: /root/teledrive
  DEV_USER: root
  DEV_HOST: 128.199.160.37
  DEV_HOST_1: 134.122.90.11
  DEV_HOST_2: 104.131.15.43

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Add npmrc
      run: echo -e "//npm.pkg.github.com/:_authToken=${NPM_AUTH_TOKEN}\n@mgilangjanuar:registry=https://npm.pkg.github.com/" > ~/.npmrc && cat ~/.npmrc
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    - run: yarn install
    - run: GENERATE_SOURCEMAP=false yarn workspaces run build
    - name: Compress node_modules root
      if: ${{ github.event_name == 'push' }}
      run: tar -czf build-root.tar.gz node_modules
    - name: Compress node_modules & dist server
      if: ${{ github.event_name == 'push' }}
      run: tar -czf build-server.tar.gz server/node_modules server/dist
    - name: Compress node_modules & build web
      if: ${{ github.event_name == 'push' }}
      run: tar -czf build-web.tar.gz web/node_modules web/build

    # Upload to SGP
    - name: Upload build-root.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-root.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
        debug: true
    - name: Upload build-server.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-server.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Upload build-web.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-web.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}

    # Upload to GER
    - name: Upload build-root.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-root.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST_1 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
        debug: true
    - name: Upload build-server.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-server.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST_1 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Upload build-web.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-web.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST_1 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}

    # Upload to US
    - name: Upload build-root.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-root.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST_2 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
        debug: true
    - name: Upload build-server.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-server.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST_2 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Upload build-web.tar.gz
      uses: appleboy/scp-action@master
      with:
        source: build-web.tar.gz
        target: ${{ env.APP_DIR }}
        host: ${{ env.DEV_HOST_2 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}

    # Deployment SGP
    - name: Extract build-root.tar.gz
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }} && rm -rf node_modules && tar -xzf build-root.tar.gz && rm -rf build-root.tar.gz
        host: ${{ env.DEV_HOST }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Extract build-web.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }}/web && rm -rf node_modules && rm -rf build && cd .. && tar -xzf build-web.tar.gz && rm -rf build-web.tar.gz
        host: ${{ env.DEV_HOST }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Extract build-server.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }}/server && rm -rf node_modules && rm -rf dist && cd .. && tar -xzf build-server.tar.gz && rm -rf build-server.tar.gz && git pull origin main --rebase && cd ${{ env.APP_DIR }} && /usr/local/bin/pm2 restart td
        host: ${{ env.DEV_HOST }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}

    # Deployment GER
    - name: Extract build-root.tar.gz
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }} && rm -rf node_modules && tar -xzf build-root.tar.gz && rm -rf build-root.tar.gz
        host: ${{ env.DEV_HOST_1 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Extract build-web.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }}/web && rm -rf node_modules && rm -rf build && cd .. && tar -xzf build-web.tar.gz && rm -rf build-web.tar.gz
        host: ${{ env.DEV_HOST_1 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Extract build-server.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }}/server && rm -rf node_modules && rm -rf dist && cd .. && tar -xzf build-server.tar.gz && rm -rf build-server.tar.gz && git pull origin main --rebase && cd ${{ env.APP_DIR }} && /usr/local/bin/pm2 restart td
        host: ${{ env.DEV_HOST_1 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}

    # Deployment US
    - name: Extract build-root.tar.gz
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }} && rm -rf node_modules && tar -xzf build-root.tar.gz && rm -rf build-root.tar.gz
        host: ${{ env.DEV_HOST_2 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Extract build-web.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }}/web && rm -rf node_modules && rm -rf build && cd .. && tar -xzf build-web.tar.gz && rm -rf build-web.tar.gz
        host: ${{ env.DEV_HOST_2 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}
    - name: Extract build-server.tar.gz
      if: ${{ github.event_name == 'push' }}
      uses: appleboy/ssh-action@master
      with:
        script: cd ${{ env.APP_DIR }}/server && rm -rf node_modules && rm -rf dist && cd .. && tar -xzf build-server.tar.gz && rm -rf build-server.tar.gz && git pull origin main --rebase && cd ${{ env.APP_DIR }} && /usr/local/bin/pm2 restart td
        host: ${{ env.DEV_HOST_2 }}
        username: ${{ env.DEV_USER }}
        key: ${{ secrets.SSH_SECRET }}

    - name: Success Notification
      uses: appleboy/telegram-action@master
      with:
        to: -700697945
        token: ${{ secrets.TG_BOT_TOKEN }}
        message: |
          ðŸŽ‰ *Deployed to Production*

          Please take a look -> https://teledriveapp.com https://ge.teledriveapp.com https://us.teledriveapp.com
        format: markdown
    - name: Failed Notification
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: -700697945
        token: ${{ secrets.TG_BOT_TOKEN }}
        message: |
          ðŸ”¥ *Deploy to Production Failed!*

          Please take a look -> https://github.com/mgilangjanuar/teledrive/actions
        format: markdown